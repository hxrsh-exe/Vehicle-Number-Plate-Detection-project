# -*- coding: utf-8 -*-
"""NumberPlateDetection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DR8dnO2PxYOQi-ERp5IyXtvy-fL8M-0t

cuda check
"""

!nvcc --version

"""packages"""

!pip install easyocr
!pip install imutils
!pip install opencv-python
!pip3 install torch torchvision torchaudio

import cv2
from matplotlib import pyplot as plt
import numpy as np
import imutils
import easyocr

"""colored to grayscale

"""

img=cv2.imread('/content/sample4.png')
gray=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
plt.imshow(cv2.cvtColor(gray,cv2.COLOR_BGR2RGB))

"""filter & edge detection"""

bfilter=cv2.bilateralFilter(gray,11,17,17) #noise reduction
edged=cv2.Canny(bfilter,30,200)
plt.imshow(cv2.cvtColor(edged, cv2.COLOR_BGR2RGB))

"""find contour, apply mask"""

keypoints=cv2.findContours(edged.copy(), cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)
contours=imutils.grab_contours(keypoints)
contours=sorted(contours, key=cv2.contourArea,reverse=True)[:10]

location=None
for contour in contours:
  approx=cv2.approxPolyDP(contour,10,True)
  if len(approx) == 4:
    location = approx
    break

print(location)

mask=np.zeros(gray.shape,np.uint8)
new_image=cv2.drawContours(mask,[location],0,255,-1)
new_image=cv2.bitwise_and(img,img,mask=mask)

plt.imshow(cv2.cvtColor(new_image,cv2.COLOR_BGR2RGB))

(x,y)=np.where(mask==255)
(x1,y1)=(np.min(x),np.min(y))
(x2,y2)=(np.max(x),np.max(y))
cropped=gray[x1:x2+1, y1:y2+1]

plt.imshow(cv2.cvtColor(cropped, cv2.COLOR_BGR2RGB))

"""easy ocr to read text"""

reader=easyocr.Reader(['en'])
result=reader.readtext(cropped)
result

"""plotting result"""

text=result[0][-2]
font = cv2.FONT_HERSHEY_SIMPLEX
res = cv2.putText(img, text=text, org=(approx[0][0][0], approx[1][0][1]+60), fontFace = font, fontScale=1, color =(0,255,0), thickness=2, lineType=cv2.LINE_AA, bottomLeftOrigin=False)
res = cv2.rectangle(img, tuple(approx[0][0]), tuple(approx[2][0]), (0,255,0), 3)
plt.imshow(cv2.cvtColor(res, cv2.COLOR_BGR2RGB))

from google.colab import drive
drive.mount('/content/drive')